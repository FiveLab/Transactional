<?php

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY TRANSACTIONAL PROXY GENERATOR
 */

namespace Proxy\__Transactional__\FiveLab\Component\Transactional\Tests\Proxy\Generator\Resources;

use FiveLab\Component\Transactional\Proxy\ProxyInterface as FiveLabTransactionalProxyInterface;

/**
 * @author Vitaliy Zhuk <v.zhuk@fivelab.org>
 */
class ServiceForGenerateProxyProxy extends \FiveLab\Component\Transactional\Tests\Proxy\Generator\Resources\ServiceForGenerateProxy implements FiveLabTransactionalProxyInterface
{
    /**
     * @var \FiveLab\Component\Transactional\TransactionalInterface
     */
    private $___transactional;

    /**
     * Real class name
     *
     * @var string
     */
    private $___realClassName = 'FiveLab\Component\Transactional\Tests\Proxy\Generator\Resources\ServiceForGenerateProxy';

    /**
     * Set transactional
     *
     * @param \FiveLab\Component\Transactional\TransactionalInterface $transactional
     */
    public function ___setTransactional(\FiveLab\Component\Transactional\TransactionalInterface $transactional): void
    {
        $this->___transactional = $transactional;
    }

    /**
     * Get real class name
     *
     * @return string
     */
    public function ___getRealClassName(): string
    {
        return $this->___realClassName;
    }

    /**
     * {@inheritdoc}
     */
    public function simpleMethod()
    {
        // Begin transaction
        $this->___transactional->begin();

        try {
            $result = parent::simpleMethod();
        } catch (\Exception $e) {
            // Rollback transaction
            $this->___transactional->rollback();

            throw $e;
        }

        // Commit transaction
        $this->___transactional->commit();

        return $result;
    }

    /**
     * {@inheritdoc}
     */
    public function simpleMethodWithArguments(int $int, string $string, float $float, array $array, \stdClass $object)
    {
        // Begin transaction
        $this->___transactional->begin();

        try {
            $result = parent::simpleMethodWithArguments($int, $string, $float, $array, $object);
        } catch (\Exception $e) {
            // Rollback transaction
            $this->___transactional->rollback();

            throw $e;
        }

        // Commit transaction
        $this->___transactional->commit();

        return $result;
    }

    /**
     * {@inheritdoc}
     */
    public function methodWithCustomInputType(\FiveLab\Component\Transactional\Tests\Proxy\Generator\Resources\ServiceForGenerateProxy $inner)
    {
        // Begin transaction
        $this->___transactional->begin();

        try {
            $result = parent::methodWithCustomInputType($inner);
        } catch (\Exception $e) {
            // Rollback transaction
            $this->___transactional->rollback();

            throw $e;
        }

        // Commit transaction
        $this->___transactional->commit();

        return $result;
    }

    /**
     * {@inheritdoc}
     */
    public function methodWithVoidReturnType(): void
    {
        // Begin transaction
        $this->___transactional->begin();

        try {
            $result = parent::methodWithVoidReturnType();
        } catch (\Exception $e) {
            // Rollback transaction
            $this->___transactional->rollback();

            throw $e;
        }

        // Commit transaction
        $this->___transactional->commit();
    }

    /**
     * {@inheritdoc}
     */
    public function methodWithIntReturnType(): int
    {
        // Begin transaction
        $this->___transactional->begin();

        try {
            $result = parent::methodWithIntReturnType();
        } catch (\Exception $e) {
            // Rollback transaction
            $this->___transactional->rollback();

            throw $e;
        }

        // Commit transaction
        $this->___transactional->commit();

        return $result;
    }

    /**
     * {@inheritdoc}
     */
    public function methodWithCustomReturnType(): \FiveLab\Component\Transactional\Tests\Proxy\Generator\Resources\ServiceForGenerateProxy
    {
        // Begin transaction
        $this->___transactional->begin();

        try {
            $result = parent::methodWithCustomReturnType();
        } catch (\Exception $e) {
            // Rollback transaction
            $this->___transactional->rollback();

            throw $e;
        }

        // Commit transaction
        $this->___transactional->commit();

        return $result;
    }
}
